/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package co.edu.udec.poo.gabrielaorozco.examenesacademicos.vistas.gui;

import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.controlador.DepartamentoAcademicoController;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.controlador.ProfesorController;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.entidades.DepartamentoAcademico;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.entidades.Profesor;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriela
 */
public class VentanaGestionarProfesor extends javax.swing.JDialog {

     
    private ProfesorController profesorController;
    private DepartamentoAcademicoController departamentoAcademicoController;

    public VentanaGestionarProfesor(java.awt.Frame parent, boolean modal, ProfesorController profesorController, DepartamentoAcademicoController departamentoAcademicoController) {
        super(parent, modal);
        this.profesorController = profesorController;
        this.departamentoAcademicoController = departamentoAcademicoController;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        JLabel3 = new javax.swing.JLabel();
        JLabel4 = new javax.swing.JLabel();
        JLabel5 = new javax.swing.JLabel();
        JLabel6 = new javax.swing.JLabel();
        campoDocumento = new javax.swing.JTextField();
        campoNombre = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        campoDepAcademico = new javax.swing.JTextField();
        JLabel7 = new javax.swing.JLabel();
        campoTelefono = new javax.swing.JTextField();
        JLabel8 = new javax.swing.JLabel();
        campoCargo = new javax.swing.JTextField();
        JLabel9 = new javax.swing.JLabel();
        campoFinContrato = new javax.swing.JTextField();
        campoInicioContrato = new javax.swing.JTextField();
        Jlabel10 = new javax.swing.JLabel();
        botonGuardar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/profesor256px.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("FORMULARIO PARA GESTION DE PROFESORES");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2), "Datos del Profesor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        JLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel3.setText("DOCUMENTO:");

        JLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel4.setText("NOMBRE:");

        JLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel5.setText("EMAIL:");

        JLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel6.setText("TELEFONO:");

        campoDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoDocumento.setPreferredSize(new java.awt.Dimension(64, 30));
        campoDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDocumentoActionPerformed(evt);
            }
        });

        campoNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoNombre.setPreferredSize(new java.awt.Dimension(64, 30));

        campoEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoEmail.setPreferredSize(new java.awt.Dimension(64, 30));

        campoDepAcademico.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoDepAcademico.setPreferredSize(new java.awt.Dimension(64, 30));
        campoDepAcademico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDepAcademicoActionPerformed(evt);
            }
        });

        JLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel7.setText("DEPARTAMENTO ACADEMICO:");

        campoTelefono.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoTelefono.setPreferredSize(new java.awt.Dimension(64, 30));
        campoTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTelefonoActionPerformed(evt);
            }
        });

        JLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel8.setText("CARGO:");

        campoCargo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoCargo.setPreferredSize(new java.awt.Dimension(64, 30));
        campoCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCargoActionPerformed(evt);
            }
        });

        JLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        JLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JLabel9.setText("INICIO DE CONTRATO:");

        campoFinContrato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoFinContrato.setPreferredSize(new java.awt.Dimension(64, 30));
        campoFinContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoFinContratoActionPerformed(evt);
            }
        });

        campoInicioContrato.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoInicioContrato.setPreferredSize(new java.awt.Dimension(64, 30));
        campoInicioContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoInicioContratoActionPerformed(evt);
            }
        });

        Jlabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Jlabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Jlabel10.setText("FIN DE CONTRATO:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(JLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(JLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Jlabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(JLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoFinContrato, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(campoDepAcademico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoInicioContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(84, 84, 84))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(campoDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(campoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(campoEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campoDepAcademico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(campoInicioContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoFinContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Jlabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
                .addGap(12, 12, 12))
        );

        botonGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar48px.png"))); // NOI18N
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonBuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buscar48px.png"))); // NOI18N
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizar48px.png"))); // NOI18N
        botonActualizar.setEnabled(false);
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/eliminar48px.png"))); // NOI18N
        botonEliminar.setEnabled(false);
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancelar48px.png"))); // NOI18N
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(32, 32, 32)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33)
                                .addComponent(botonActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33)
                                .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(36, 36, 36)
                                .addComponent(botonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonEliminar)
                    .addComponent(botonCancelar)
                    .addComponent(botonActualizar)
                    .addComponent(botonBuscar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonGuardar)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDocumentoActionPerformed

    private void campoTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTelefonoActionPerformed

    private void campoDepAcademicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDepAcademicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDepAcademicoActionPerformed

    private void campoCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCargoActionPerformed

    private void campoFinContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoFinContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoFinContratoActionPerformed

    private void campoInicioContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoInicioContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoInicioContratoActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        try {
            // recuperar datos del formulario
            Integer documento = Integer.parseInt(campoDocumento.getText().trim());
            String nombre = campoNombre.getText().trim();
            String email = campoEmail.getText().trim();
            Integer telefono = Integer.parseInt(campoTelefono.getText().trim());
            String cargo = campoCargo.getText().trim();
            Integer idDepartamentoAcademico = Integer.parseInt(campoDepAcademico.getText().trim());

            // Variables de fecha declaradas aquí para que puedan usarse más abajo
            Date fechaInicio = null;
            Date fechaFin = null;

            try {
                String textoInicio = campoInicioContrato.getText().trim();
                String textoFin = campoFinContrato.getText().trim();
                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

                fechaInicio = formato.parse(textoInicio);
                fechaFin = formato.parse(textoFin);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Use yyyy-MM-dd.");
                return;
            }

            // Buscar departamento académico
            DepartamentoAcademico departamentoAcademico = departamentoAcademicoController.getDepartamentoAcademicoById(idDepartamentoAcademico);
            if (departamentoAcademico == null) {
                JOptionPane.showMessageDialog(this, "El departamento con ID " + idDepartamentoAcademico + " no existe.");
                return;
            }

            // Crear y guardar el profesor
            Profesor nuevoProfesor = new Profesor();
            nuevoProfesor.setId_Profesor(documento);
            nuevoProfesor.setNombre_Profesor(nombre);
            nuevoProfesor.setEmail_Profesor(email);
            nuevoProfesor.setTelefono_Profesor(telefono);
            nuevoProfesor.setCargo(cargo);
            nuevoProfesor.setDepartamentoAcademico(departamentoAcademico);
            nuevoProfesor.setFecha_InicioContrato(fechaInicio);
            nuevoProfesor.setFecha_FinContrato(fechaFin);

            profesorController.createProfesor(nuevoProfesor);

            JOptionPane.showMessageDialog(this, "Profesor guardado correctamente.");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese valores numéricos válidos en Documento o Departamento Académico.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al guardar el profesor: " + ex.getMessage());
            ex.printStackTrace();
        }

        LimpiarCampos();
    }//GEN-LAST:event_botonGuardarActionPerformed

    public void LimpiarCampos() {
        campoDocumento.setText("");
        campoNombre.setText("");
        campoEmail.setText("");
        campoTelefono.setText("");
        campoCargo.setText("");
        campoDepAcademico.setText("");
        campoInicioContrato.setText("");
        campoFinContrato.setText("");
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        campoDocumento.setEditable(true);
    }
    
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        try {
            // Recuperar el documento desde el formulario
            Integer idProfesor = Integer.parseInt(campoDocumento.getText().trim());

            // Buscar profesor por id
            Profesor profesor = profesorController.getProfesorById(idProfesor);

            if (profesor == null) {
                JOptionPane.showMessageDialog(this, "No se encontró un profesor con el ID " + idProfesor);
                return;
            }

            // Mostrar los datos en los campos del formulario
            campoNombre.setText(profesor.getNombre_Profesor());
            campoEmail.setText(profesor.getEmail_Profesor());
            campoTelefono.setText(String.valueOf(profesor.getTelefono_Profesor()));
            campoCargo.setText(profesor.getCargo());

            if (profesor.getDepartamentoAcademico() != null) {
                campoDepAcademico.setText(String.valueOf(profesor.getDepartamentoAcademico().getIdDepartamentoAcademico()));
            } else {
                campoDepAcademico.setText("");
            }

            // Formatear y mostrar fechas
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");

            if (profesor.getFecha_InicioContrato() != null) {
                campoInicioContrato.setText(formatoFecha.format(profesor.getFecha_InicioContrato()));
            } else {
                campoInicioContrato.setText("");
            }

            if (profesor.getFecha_FinContrato() != null) {
                campoFinContrato.setText(formatoFecha.format(profesor.getFecha_FinContrato()));
            } else {
                campoFinContrato.setText("");
            }

            JOptionPane.showMessageDialog(this, "Profesor encontrado.");

            // Activar botones y bloquear edición del documento
            botonActualizar.setEnabled(true);
            botonEliminar.setEnabled(true);
            campoDocumento.setEditable(false);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en el campo Documento.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al buscar el profesor: " + ex.getMessage());
            ex.printStackTrace();
            LimpiarCampos();
        }

    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        // Validar que el documento no esté vacío
        if (campoDocumento.getText() == null || campoDocumento.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Para actualizar, primero debe buscar un profesor.");
            LimpiarCampos();
            return;
        }

        try {
            // Recuperar el documento
            Integer documento = Integer.parseInt(campoDocumento.getText().trim());

            // Buscar profesor existente
            Profesor profesorExistente = profesorController.getProfesorById(documento);
            if (profesorExistente == null) {
                JOptionPane.showMessageDialog(this, "No se encontró un profesor con el documento " + documento);
                return;
            }

            // Recuperar y validar datos del formulario
            String nombre = campoNombre.getText().trim();
            String email = campoEmail.getText().trim();
            int telefono = Integer.parseInt(campoTelefono.getText().trim());
            String cargo = campoCargo.getText().trim();
            int idDepartamentoAcademico = Integer.parseInt(campoDepAcademico.getText().trim());

            // Buscar departamento académico
            DepartamentoAcademico departamentoAcademico = departamentoAcademicoController.getDepartamentoAcademicoById(idDepartamentoAcademico);
            if (departamentoAcademico == null) {
                JOptionPane.showMessageDialog(this, "El departamento académico con ID " + idDepartamentoAcademico + " no existe.");
                return;
            }

            // Parsear fechas
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fechaInicioContrato = formato.parse(campoInicioContrato.getText().trim());
            Date fechaFinContrato = formato.parse(campoFinContrato.getText().trim());

            // Actualizar el objeto profesor
            profesorExistente.setNombre_Profesor(nombre);
            profesorExistente.setEmail_Profesor(email);
            profesorExistente.setTelefono_Profesor(telefono);
            profesorExistente.setCargo(cargo);
            profesorExistente.setDepartamentoAcademico(departamentoAcademico);
            profesorExistente.setFecha_InicioContrato(fechaInicioContrato);
            profesorExistente.setFecha_FinContrato(fechaFinContrato);

            // Actualizar en la base de datos
            profesorController.updateProfesor(documento, profesorExistente);

            JOptionPane.showMessageDialog(this, "Profesor actualizado correctamente.");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese valores numéricos válidos en Documento y Departamento Academico.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al actualizar el alumno: " + ex.getMessage());
            ex.printStackTrace();
        }

        LimpiarCampos();
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        //Se valida que el campo documento no esté vacío
        if (campoDocumento.getText() == null || campoDocumento.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Para eliminar primero debe buscar un alumno.");
            LimpiarCampos();
            return;
        }

        try {
            Integer documento = Integer.parseInt(campoDocumento.getText().trim());

            Profesor profesorExistente = profesorController.getProfesorById(documento);
            if (profesorExistente == null) {
                JOptionPane.showMessageDialog(this, "No se encontró un profesor con el documento " + documento);
                return;
            }

            int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Estás seguro de que deseas eliminar al alumno con documento " + documento + "?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION
            );

            if (confirmacion == JOptionPane.YES_OPTION) {
                profesorController.deleteProfesor(documento);
                JOptionPane.showMessageDialog(this, "Profesor eliminado correctamente.");

                LimpiarCampos();
                campoDocumento.setEditable(true);
                botonActualizar.setEnabled(false);
                botonEliminar.setEnabled(false);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en el campo Documento.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el alumno: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "¿Desea salir?", "ATENCION - CONFIRMAR",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(opcion == JOptionPane.YES_OPTION){
            this.dispose();
        }

    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaGestionarProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel3;
    private javax.swing.JLabel JLabel4;
    private javax.swing.JLabel JLabel5;
    private javax.swing.JLabel JLabel6;
    private javax.swing.JLabel JLabel7;
    private javax.swing.JLabel JLabel8;
    private javax.swing.JLabel JLabel9;
    private javax.swing.JLabel Jlabel10;
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JTextField campoCargo;
    private javax.swing.JTextField campoDepAcademico;
    private javax.swing.JTextField campoDocumento;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoFinContrato;
    private javax.swing.JTextField campoInicioContrato;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
