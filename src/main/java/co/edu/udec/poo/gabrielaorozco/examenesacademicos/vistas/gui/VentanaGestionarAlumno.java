/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package co.edu.udec.poo.gabrielaorozco.examenesacademicos.vistas.gui;

import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.controlador.AlumnoController;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.controlador.CursoController;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.entidades.Alumno;
import co.edu.udec.poo.gabrielaorozco.examenesacademicos.modelo.entidades.Curso;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriela
 */
public class VentanaGestionarAlumno extends javax.swing.JDialog {
    
    
    
    private AlumnoController alumnoController;
    private CursoController cursoController;

    public VentanaGestionarAlumno(java.awt.Frame parent, boolean modal, AlumnoController alumnoController, CursoController cursoController) {
        super(parent, modal);
        this.alumnoController = alumnoController;
        this.cursoController = cursoController;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        campoDocumento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        campoGrupo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campoCurso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        botonGuardar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("..::GESTION DE ALUMNOS::..-ALUMNOS FORM");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FORMULARIO PARA GESTION DE ALUMNOS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true), "DATOS DEL ALUMNO:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("DOCUMENTO:");

        campoDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoDocumento.setPreferredSize(new java.awt.Dimension(64, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("NOMBRE:");

        campoNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoNombre.setPreferredSize(new java.awt.Dimension(64, 30));
        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("GRUPO:");

        campoGrupo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoGrupo.setPreferredSize(new java.awt.Dimension(64, 30));
        campoGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoGrupoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("CURSO:");

        campoCurso.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        campoCurso.setPreferredSize(new java.awt.Dimension(64, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alumno256px.png"))); // NOI18N

        botonGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar48px.png"))); // NOI18N
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancelar48px.png"))); // NOI18N
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/eliminar48px.png"))); // NOI18N
        botonEliminar.setEnabled(false);
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonBuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buscar48px.png"))); // NOI18N
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        botonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizar48px.png"))); // NOI18N
        botonActualizar.setEnabled(false);
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addGap(38, 38, 38)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addGap(42, 42, 42)
                                .addComponent(botonActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addGap(37, 37, 37)
                                .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addGap(39, 39, 39)
                                .addComponent(botonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonGuardar)
                    .addComponent(botonCancelar)
                    .addComponent(botonEliminar)
                    .addComponent(botonBuscar)
                    .addComponent(botonActualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoGrupoActionPerformed
 
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "¿Desea salir?", "ATENCION - CONFIRMAR",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
       if(opcion == JOptionPane.YES_OPTION){
           this.dispose();
       }
       
        
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        try {
            // recuperar datos del formulario
            Integer documento = Integer.parseInt(campoDocumento.getText().trim());
            String nombre = campoNombre.getText().trim();
            String grupo = campoGrupo.getText().trim();
            Integer idCurso = Integer.parseInt(campoCurso.getText().trim());

            // Busca curso por id
            Curso curso = cursoController.getCursoById(idCurso); 

            if (curso == null) {
                JOptionPane.showMessageDialog(this, "El curso con ID " + idCurso + " no existe.");
                return;
            }

            Alumno nuevoAlumno = new Alumno();
            nuevoAlumno.setIdAlumno(documento);
            nuevoAlumno.setNombre_Alumno(nombre);
            nuevoAlumno.setGrupo(grupo);
            nuevoAlumno.setCurso(curso); 

            alumnoController.createAlumno(nuevoAlumno);

            JOptionPane.showMessageDialog(this, "Alumno guardado correctamente.");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese valores numéricos válidos en Documento y Curso.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al guardar el alumno: " + ex.getMessage());
            ex.printStackTrace();
        }
        
        LimpiarCampos();
    }//GEN-LAST:event_botonGuardarActionPerformed

    public void LimpiarCampos() {
        campoDocumento.setText("");
        campoNombre.setText("");
        campoGrupo.setText("");
        campoCurso.setText("");
        botonActualizar.setEnabled(false);
        botonEliminar.setEnabled(false);
        campoDocumento.setEditable(true);
    }
    
    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        //Se valida que el campo documento no esté vacío
        if (campoDocumento.getText() == null || campoDocumento.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Para eliminar primero debe buscar un alumno.");
            LimpiarCampos();
            return;
        }

        try {
            Integer documento = Integer.parseInt(campoDocumento.getText().trim());

            Alumno alumnoExistente = alumnoController.getAlumnoById(documento);
            if (alumnoExistente == null) {
                JOptionPane.showMessageDialog(this, "No se encontró un alumno con el documento " + documento);
                return;
            }

            int confirmacion = JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro de que deseas eliminar al alumno con documento " + documento + "?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacion == JOptionPane.YES_OPTION) {
                alumnoController.DeleteAlumno(documento);
                JOptionPane.showMessageDialog(this, "Alumno eliminado correctamente.");

                LimpiarCampos();
                campoDocumento.setEditable(true); 
                botonActualizar.setEnabled(false); 
                botonEliminar.setEnabled(false);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en el campo Documento.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el alumno: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        try {
        // Recuperar el documento desde el formulario
        Integer idAlumno = Integer.parseInt(campoDocumento.getText().trim());

        // Buscar alumno por id
        Alumno alumno = alumnoController.getAlumnoById(idAlumno);

        if (alumno == null) {
            JOptionPane.showMessageDialog(this, "No se encontró un alumno con el ID " + idAlumno);
            return;
        }
        

        // Mostrar los datos en los campos del formulario
        campoNombre.setText(alumno.getNombre_Alumno());
        campoGrupo.setText(alumno.getGrupo());
        botonActualizar.setEnabled(true);
        botonEliminar.setEnabled(true);
        
        if (alumno.getCurso() != null) {
            campoCurso.setText(String.valueOf(alumno.getCurso().getIdCurso()));
        } else {
            campoCurso.setText("");
        }

        JOptionPane.showMessageDialog(this, "Alumno encontrado.");
        
        campoDocumento.setEditable(false);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en el campo Documento.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al buscar el alumno: " + ex.getMessage());
        ex.printStackTrace();
        
            LimpiarCampos();
            
    }
        
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        //Se valida que el campo documento no esté vacío
    if (campoDocumento.getText() == null || campoDocumento.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Para actualizar primero debe buscar un alumno.");
        LimpiarCampos();
        return;
    }

    try {
        // Recuperar el documento del formulario
        Integer documento = Integer.parseInt(campoDocumento.getText().trim());
        
        // Buscar alumno existente por id
        Alumno alumnoExistente = alumnoController.getAlumnoById(documento);
        if (alumnoExistente == null) {
            JOptionPane.showMessageDialog(this, "No se encontró un alumno con el documento " + documento);
            return;
        }


        // Recuperar los demás campos
        String nombre = campoNombre.getText().trim();
        String grupo = campoGrupo.getText().trim();
        Integer idCurso = Integer.parseInt(campoCurso.getText().trim());

        // Buscar el curso por id
        Curso curso = cursoController.getCursoById(idCurso);
        if (curso == null) {
            JOptionPane.showMessageDialog(this, "El curso con ID " + idCurso + " no existe.");
            return;
        }

        // Actualizar datos del alumno
        alumnoExistente.setNombre_Alumno(nombre);
        alumnoExistente.setGrupo(grupo);
        alumnoExistente.setCurso(curso);

        alumnoController.UpdateAlumno(documento, alumnoExistente);

        JOptionPane.showMessageDialog(this, "Alumno actualizado correctamente.");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor ingrese valores numéricos válidos en Documento y Curso.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al actualizar el alumno: " + ex.getMessage());
        ex.printStackTrace();
    }

    LimpiarCampos();
    }//GEN-LAST:event_botonActualizarActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JTextField campoCurso;
    private javax.swing.JTextField campoDocumento;
    private javax.swing.JTextField campoGrupo;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
